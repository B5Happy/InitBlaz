@page "/fetchdata2"
@using InitBlaz.Shared
@using InitBlaz.Client.Services.Http
@inject IHttpsWeatherService HttpsWeatherService
@using System.Net
@using Newtonsoft.Json

<h1>Weather forecast Methode 2</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        var res = await HttpsWeatherService.GetWeatherForcasts();
        switch (res.StatusCode)
        {
            case HttpStatusCode.OK:
                string content = await res.Content.ReadAsStringAsync();
                forecasts = JsonConvert.DeserializeObject<WeatherForecast[]>(content);
                break;
        }
    }

}
